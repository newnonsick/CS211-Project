@startuml
class cs211.project.models.collections.UserList {
- ArrayList<User> users
+ <<Create>> UserList()
+ void addUser(User)
+ User findUserByUsername(String)
+ boolean findUser(User)
+ boolean findUser(String)
+ User getUser(String)
+ void setProfileImageByUsername(String,String)
+ ArrayList<User> getUsers()
}
class cs211.project.models.collections.ActivityList {
~ ArrayList<Activity> activities
+ <<Create>> ActivityList()
+ ArrayList<Activity> getActivities()
+ void addNewActivityTeam(String,String,String,String,String,String)
+ void addNewActivityParticipant(String,String,String,LocalTime,LocalTime,LocalDate)
+ Activity findActivityByObject(Activity)
+ Activity findActivityByUUID(String)
+ void removeActivity(Activity)
+ void setActivityStatusByUUID(String,String)
+ void sort(Comparator<Activity>)
}
class cs211.project.models.collections.TeamList {
- ArrayList<Team> teams
+ <<Create>> TeamList()
+ ArrayList<Team> getTeams()
+ boolean addNewTeam(String,String,int,LocalDate,LocalTime,LocalDate,LocalTime,String,String)
+ Team findEventByEventUUIDAndTeamName(String,String)
+ Team findTeamByObject(Team)
+ void sort()
+ void sort(Comparator<Team>)
}
class cs211.project.models.collections.TeamParticipantList {
~ ArrayList<TeamParticipant> teamParticipants
+ <<Create>> TeamParticipantList()
+ boolean addNewTeamParticipant(String,String,String)
+ TeamParticipant findTeamParticipantByUsernameAndEventUUIDAndTeam(String,String,String)
+ int getTeamParticipantCountByEventUUIDAndTeamName(String,String)
+ boolean checkUserInTeam(String,String,String)
+ void removeTeamParticipant(TeamParticipant)
+ ArrayList<TeamParticipant> getTeamParticipants()
}
class cs211.project.models.collections.TeamChatList {
~ ArrayList<TeamChat> teamChats
+ <<Create>> TeamChatList()
+ void addNewChat(String,String,String,String,LocalDateTime,String)
+ void deleteChatOfActivity(String)
+ ArrayList<TeamChat> getTeamChats()
+ void sort()
}
class cs211.project.models.collections.EventList {
- ArrayList<Event> events
+ <<Create>> EventList()
+ void addEvent(String,String,String,String,String,LocalDate,LocalDate,LocalTime,LocalTime,String,int,LocalDate,LocalDate,LocalTime,LocalTime,String)
+ boolean findEvent(String)
+ Event findEventByEventName(String)
+ Event findEventByUUID(String)
+ ArrayList<Event> getEvents()
+ void sort()
+ void sort(Comparator<Event>)
}
@enduml